/* this is generated by nino */
using System.Runtime.CompilerServices;

namespace HotUpdateScripts
{
    public partial class TBallData
    {
        public static TBallData.SerializationHelper NinoSerializationHelper = new TBallData.SerializationHelper();
        public unsafe class SerializationHelper: Nino.Serialization.NinoWrapperBase<TBallData>
        {
            #region NINO_CODEGEN
            public SerializationHelper()
            {

            }
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public override void Serialize(TBallData value, ref Nino.Serialization.Writer writer)
            {
                if(value == null)
                {
                    writer.Write(false);
                    return;
                }
                writer.Write(true);
                writer.Write(ref value.Id, sizeof(System.Int32));
                writer.Write(ref value.type, sizeof(System.Int32));
                writer.Write(ref value.bigOrSmallBallTypr, sizeof(System.Int32));
                writer.Write(ref value.firePoint, sizeof(System.Int32));
                writer.Write(ref value.size, sizeof(System.Double));
                writer.Write(ref value.minsize, sizeof(System.Double));
                writer.Write(ref value.mass, sizeof(System.Double));
                writer.Write(ref value.hp, sizeof(System.Int32));
                writer.Write(ref value.attack, sizeof(System.Int32));
                writer.Write(ref value.resultInterval, sizeof(System.Double));
                writer.Write(ref value.noColliderTime, sizeof(System.Double));
                writer.Write(ref value.noColliderRange, sizeof(System.Double));
                writer.Write(ref value.bornSpeed, sizeof(System.Double));
                writer.Write(ref value.moveSpeed, sizeof(System.Double));
                writer.Write(ref value.maxSpeed, sizeof(System.Double));
                writer.Write(ref value.effectRange, sizeof(System.Double));
                writer.Write(ref value.effectScale, sizeof(System.Double));
                writer.Write(ref value.effectTime, sizeof(System.Double));
                writer.Write(ref value.effectParam, sizeof(System.Double));
                writer.Write(ref value.buffAttack, sizeof(System.Int32));
                writer.Write(ref value.buffHP, sizeof(System.Int32));
                writer.Write(ref value.beginSoundIndex, sizeof(System.Int32));
            }

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public override TBallData Deserialize(Nino.Serialization.Reader reader)
            {
                if(!reader.ReadBool())
                    return null;
                TBallData value = new TBallData();
                reader.Read<System.Int32>(ref value.Id, sizeof(System.Int32));
                reader.Read<System.Int32>(ref value.type, sizeof(System.Int32));
                reader.Read<System.Int32>(ref value.bigOrSmallBallTypr, sizeof(System.Int32));
                reader.Read<System.Int32>(ref value.firePoint, sizeof(System.Int32));
                reader.Read<System.Double>(ref value.size, sizeof(System.Double));
                reader.Read<System.Double>(ref value.minsize, sizeof(System.Double));
                reader.Read<System.Double>(ref value.mass, sizeof(System.Double));
                reader.Read<System.Int32>(ref value.hp, sizeof(System.Int32));
                reader.Read<System.Int32>(ref value.attack, sizeof(System.Int32));
                reader.Read<System.Double>(ref value.resultInterval, sizeof(System.Double));
                reader.Read<System.Double>(ref value.noColliderTime, sizeof(System.Double));
                reader.Read<System.Double>(ref value.noColliderRange, sizeof(System.Double));
                reader.Read<System.Double>(ref value.bornSpeed, sizeof(System.Double));
                reader.Read<System.Double>(ref value.moveSpeed, sizeof(System.Double));
                reader.Read<System.Double>(ref value.maxSpeed, sizeof(System.Double));
                reader.Read<System.Double>(ref value.effectRange, sizeof(System.Double));
                reader.Read<System.Double>(ref value.effectScale, sizeof(System.Double));
                reader.Read<System.Double>(ref value.effectTime, sizeof(System.Double));
                reader.Read<System.Double>(ref value.effectParam, sizeof(System.Double));
                reader.Read<System.Int32>(ref value.buffAttack, sizeof(System.Int32));
                reader.Read<System.Int32>(ref value.buffHP, sizeof(System.Int32));
                reader.Read<System.Int32>(ref value.beginSoundIndex, sizeof(System.Int32));
                return value;
            }

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public override int GetSize(TBallData value)
            {
                if(value == null)
                {
                    return 1;
                }
                int ret = 1;
                ret += Nino.Serialization.Serializer.GetSize(value.Id);
                ret += Nino.Serialization.Serializer.GetSize(value.type);
                ret += Nino.Serialization.Serializer.GetSize(value.bigOrSmallBallTypr);
                ret += Nino.Serialization.Serializer.GetSize(value.firePoint);
                ret += Nino.Serialization.Serializer.GetSize(value.size);
                ret += Nino.Serialization.Serializer.GetSize(value.minsize);
                ret += Nino.Serialization.Serializer.GetSize(value.mass);
                ret += Nino.Serialization.Serializer.GetSize(value.hp);
                ret += Nino.Serialization.Serializer.GetSize(value.attack);
                ret += Nino.Serialization.Serializer.GetSize(value.resultInterval);
                ret += Nino.Serialization.Serializer.GetSize(value.noColliderTime);
                ret += Nino.Serialization.Serializer.GetSize(value.noColliderRange);
                ret += Nino.Serialization.Serializer.GetSize(value.bornSpeed);
                ret += Nino.Serialization.Serializer.GetSize(value.moveSpeed);
                ret += Nino.Serialization.Serializer.GetSize(value.maxSpeed);
                ret += Nino.Serialization.Serializer.GetSize(value.effectRange);
                ret += Nino.Serialization.Serializer.GetSize(value.effectScale);
                ret += Nino.Serialization.Serializer.GetSize(value.effectTime);
                ret += Nino.Serialization.Serializer.GetSize(value.effectParam);
                ret += Nino.Serialization.Serializer.GetSize(value.buffAttack);
                ret += Nino.Serialization.Serializer.GetSize(value.buffHP);
                ret += Nino.Serialization.Serializer.GetSize(value.beginSoundIndex);
                return ret;
            }
            #endregion
        }
    }
}