// Generated by sprotodump. DO NOT EDIT!
// source: E:\WorkSpace\qiuqiu_client\Assets\Scripts\NetWork\ProtoTools\protocol\/s2c.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace SprotoType { 
	public class douyin_choose_side : SprotoTypeBase {
		private static int max_field_count = 14;
		
		
		private string _openid; // tag 1
		public string openid {
			get { return _openid; }
			set { base.has_field.set_field (0, true); _openid = value; }
		}
		public bool HasOpenid {
			get { return base.has_field.has_field (0); }
		}

		private string _content; // tag 2
		public string content {
			get { return _content; }
			set { base.has_field.set_field (1, true); _content = value; }
		}
		public bool HasContent {
			get { return base.has_field.has_field (1); }
		}

		private string _avatar_url; // tag 3
		public string avatar_url {
			get { return _avatar_url; }
			set { base.has_field.set_field (2, true); _avatar_url = value; }
		}
		public bool HasAvatar_url {
			get { return base.has_field.has_field (2); }
		}

		private string _nickname; // tag 4
		public string nickname {
			get { return _nickname; }
			set { base.has_field.set_field (3, true); _nickname = value; }
		}
		public bool HasNickname {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _king; // tag 5
		public Int64 king {
			get { return _king; }
			set { base.has_field.set_field (4, true); _king = value; }
		}
		public bool HasKing {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _small_king; // tag 6
		public Int64 small_king {
			get { return _small_king; }
			set { base.has_field.set_field (5, true); _small_king = value; }
		}
		public bool HasSmall_king {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _world_score; // tag 7
		public Int64 world_score {
			get { return _world_score; }
			set { base.has_field.set_field (6, true); _world_score = value; }
		}
		public bool HasWorld_score {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _world_rank; // tag 8
		public Int64 world_rank {
			get { return _world_rank; }
			set { base.has_field.set_field (7, true); _world_rank = value; }
		}
		public bool HasWorld_rank {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _win_combo; // tag 9
		public Int64 win_combo {
			get { return _win_combo; }
			set { base.has_field.set_field (8, true); _win_combo = value; }
		}
		public bool HasWin_combo {
			get { return base.has_field.has_field (8); }
		}

		private string _family; // tag 10
		public string family {
			get { return _family; }
			set { base.has_field.set_field (9, true); _family = value; }
		}
		public bool HasFamily {
			get { return base.has_field.has_field (9); }
		}

		private Int64 _win_lock; // tag 11
		public Int64 win_lock {
			get { return _win_lock; }
			set { base.has_field.set_field (10, true); _win_lock = value; }
		}
		public bool HasWin_lock {
			get { return base.has_field.has_field (10); }
		}

		private Int64 _rejoin_acc; // tag 12
		public Int64 rejoin_acc {
			get { return _rejoin_acc; }
			set { base.has_field.set_field (11, true); _rejoin_acc = value; }
		}
		public bool HasRejoin_acc {
			get { return base.has_field.has_field (11); }
		}

		private Int64 _top_acc; // tag 13
		public Int64 top_acc {
			get { return _top_acc; }
			set { base.has_field.set_field (12, true); _top_acc = value; }
		}
		public bool HasTop_acc {
			get { return base.has_field.has_field (12); }
		}

		public douyin_choose_side () : base(max_field_count) {}

		public douyin_choose_side (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 1:
					this.openid = base.deserialize.read_string ();
					break;
				case 2:
					this.content = base.deserialize.read_string ();
					break;
				case 3:
					this.avatar_url = base.deserialize.read_string ();
					break;
				case 4:
					this.nickname = base.deserialize.read_string ();
					break;
				case 5:
					this.king = base.deserialize.read_integer ();
					break;
				case 6:
					this.small_king = base.deserialize.read_integer ();
					break;
				case 7:
					this.world_score = base.deserialize.read_integer ();
					break;
				case 8:
					this.world_rank = base.deserialize.read_integer ();
					break;
				case 9:
					this.win_combo = base.deserialize.read_integer ();
					break;
				case 10:
					this.family = base.deserialize.read_string ();
					break;
				case 11:
					this.win_lock = base.deserialize.read_integer ();
					break;
				case 12:
					this.rejoin_acc = base.deserialize.read_integer ();
					break;
				case 13:
					this.top_acc = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.openid, 1);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.content, 2);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.avatar_url, 3);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.nickname, 4);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.king, 5);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.small_king, 6);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.world_score, 7);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.world_rank, 8);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.win_combo, 9);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_string (this.family, 10);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.win_lock, 11);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.rejoin_acc, 12);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.top_acc, 13);
			}

			return base.serialize.close ();
		}
	}


	public class douyin_comment : SprotoTypeBase {
		private static int max_field_count = 9;
		
		
		private string _openid; // tag 1
		public string openid {
			get { return _openid; }
			set { base.has_field.set_field (0, true); _openid = value; }
		}
		public bool HasOpenid {
			get { return base.has_field.has_field (0); }
		}

		private string _content; // tag 2
		public string content {
			get { return _content; }
			set { base.has_field.set_field (1, true); _content = value; }
		}
		public bool HasContent {
			get { return base.has_field.has_field (1); }
		}

		private string _avatar_url; // tag 3
		public string avatar_url {
			get { return _avatar_url; }
			set { base.has_field.set_field (2, true); _avatar_url = value; }
		}
		public bool HasAvatar_url {
			get { return base.has_field.has_field (2); }
		}

		private string _nickname; // tag 4
		public string nickname {
			get { return _nickname; }
			set { base.has_field.set_field (3, true); _nickname = value; }
		}
		public bool HasNickname {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _king; // tag 5
		public Int64 king {
			get { return _king; }
			set { base.has_field.set_field (4, true); _king = value; }
		}
		public bool HasKing {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _small_king; // tag 6
		public Int64 small_king {
			get { return _small_king; }
			set { base.has_field.set_field (5, true); _small_king = value; }
		}
		public bool HasSmall_king {
			get { return base.has_field.has_field (5); }
		}

		private string _family; // tag 7
		public string family {
			get { return _family; }
			set { base.has_field.set_field (6, true); _family = value; }
		}
		public bool HasFamily {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _win_combo; // tag 8
		public Int64 win_combo {
			get { return _win_combo; }
			set { base.has_field.set_field (7, true); _win_combo = value; }
		}
		public bool HasWin_combo {
			get { return base.has_field.has_field (7); }
		}

		public douyin_comment () : base(max_field_count) {}

		public douyin_comment (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 1:
					this.openid = base.deserialize.read_string ();
					break;
				case 2:
					this.content = base.deserialize.read_string ();
					break;
				case 3:
					this.avatar_url = base.deserialize.read_string ();
					break;
				case 4:
					this.nickname = base.deserialize.read_string ();
					break;
				case 5:
					this.king = base.deserialize.read_integer ();
					break;
				case 6:
					this.small_king = base.deserialize.read_integer ();
					break;
				case 7:
					this.family = base.deserialize.read_string ();
					break;
				case 8:
					this.win_combo = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.openid, 1);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.content, 2);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.avatar_url, 3);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.nickname, 4);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.king, 5);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.small_king, 6);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.family, 7);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.win_combo, 8);
			}

			return base.serialize.close ();
		}
	}


	public class douyin_gift : SprotoTypeBase {
		private static int max_field_count = 12;
		
		
		private string _openid; // tag 1
		public string openid {
			get { return _openid; }
			set { base.has_field.set_field (0, true); _openid = value; }
		}
		public bool HasOpenid {
			get { return base.has_field.has_field (0); }
		}

		private string _avatar_url; // tag 3
		public string avatar_url {
			get { return _avatar_url; }
			set { base.has_field.set_field (1, true); _avatar_url = value; }
		}
		public bool HasAvatar_url {
			get { return base.has_field.has_field (1); }
		}

		private string _nickname; // tag 4
		public string nickname {
			get { return _nickname; }
			set { base.has_field.set_field (2, true); _nickname = value; }
		}
		public bool HasNickname {
			get { return base.has_field.has_field (2); }
		}

		private string _gift_id; // tag 5
		public string gift_id {
			get { return _gift_id; }
			set { base.has_field.set_field (3, true); _gift_id = value; }
		}
		public bool HasGift_id {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _gift_num; // tag 6
		public Int64 gift_num {
			get { return _gift_num; }
			set { base.has_field.set_field (4, true); _gift_num = value; }
		}
		public bool HasGift_num {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _king; // tag 7
		public Int64 king {
			get { return _king; }
			set { base.has_field.set_field (5, true); _king = value; }
		}
		public bool HasKing {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _small_king; // tag 8
		public Int64 small_king {
			get { return _small_king; }
			set { base.has_field.set_field (6, true); _small_king = value; }
		}
		public bool HasSmall_king {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _gift_total; // tag 9
		public Int64 gift_total {
			get { return _gift_total; }
			set { base.has_field.set_field (7, true); _gift_total = value; }
		}
		public bool HasGift_total {
			get { return base.has_field.has_field (7); }
		}

		private string _family; // tag 10
		public string family {
			get { return _family; }
			set { base.has_field.set_field (8, true); _family = value; }
		}
		public bool HasFamily {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _win_combo; // tag 11
		public Int64 win_combo {
			get { return _win_combo; }
			set { base.has_field.set_field (9, true); _win_combo = value; }
		}
		public bool HasWin_combo {
			get { return base.has_field.has_field (9); }
		}

		public douyin_gift () : base(max_field_count) {}

		public douyin_gift (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 1:
					this.openid = base.deserialize.read_string ();
					break;
				case 3:
					this.avatar_url = base.deserialize.read_string ();
					break;
				case 4:
					this.nickname = base.deserialize.read_string ();
					break;
				case 5:
					this.gift_id = base.deserialize.read_string ();
					break;
				case 6:
					this.gift_num = base.deserialize.read_integer ();
					break;
				case 7:
					this.king = base.deserialize.read_integer ();
					break;
				case 8:
					this.small_king = base.deserialize.read_integer ();
					break;
				case 9:
					this.gift_total = base.deserialize.read_integer ();
					break;
				case 10:
					this.family = base.deserialize.read_string ();
					break;
				case 11:
					this.win_combo = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.openid, 1);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.avatar_url, 3);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.nickname, 4);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.gift_id, 5);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.gift_num, 6);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.king, 7);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.small_king, 8);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.gift_total, 9);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_string (this.family, 10);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.win_combo, 11);
			}

			return base.serialize.close ();
		}
	}


	public class douyin_like : SprotoTypeBase {
		private static int max_field_count = 11;
		
		
		private string _openid; // tag 1
		public string openid {
			get { return _openid; }
			set { base.has_field.set_field (0, true); _openid = value; }
		}
		public bool HasOpenid {
			get { return base.has_field.has_field (0); }
		}

		private string _avatar_url; // tag 3
		public string avatar_url {
			get { return _avatar_url; }
			set { base.has_field.set_field (1, true); _avatar_url = value; }
		}
		public bool HasAvatar_url {
			get { return base.has_field.has_field (1); }
		}

		private string _nickname; // tag 4
		public string nickname {
			get { return _nickname; }
			set { base.has_field.set_field (2, true); _nickname = value; }
		}
		public bool HasNickname {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _like_num; // tag 6
		public Int64 like_num {
			get { return _like_num; }
			set { base.has_field.set_field (3, true); _like_num = value; }
		}
		public bool HasLike_num {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _king; // tag 7
		public Int64 king {
			get { return _king; }
			set { base.has_field.set_field (4, true); _king = value; }
		}
		public bool HasKing {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _small_king; // tag 8
		public Int64 small_king {
			get { return _small_king; }
			set { base.has_field.set_field (5, true); _small_king = value; }
		}
		public bool HasSmall_king {
			get { return base.has_field.has_field (5); }
		}

		private string _family; // tag 9
		public string family {
			get { return _family; }
			set { base.has_field.set_field (6, true); _family = value; }
		}
		public bool HasFamily {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _win_combo; // tag 10
		public Int64 win_combo {
			get { return _win_combo; }
			set { base.has_field.set_field (7, true); _win_combo = value; }
		}
		public bool HasWin_combo {
			get { return base.has_field.has_field (7); }
		}

		public douyin_like () : base(max_field_count) {}

		public douyin_like (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 1:
					this.openid = base.deserialize.read_string ();
					break;
				case 3:
					this.avatar_url = base.deserialize.read_string ();
					break;
				case 4:
					this.nickname = base.deserialize.read_string ();
					break;
				case 6:
					this.like_num = base.deserialize.read_integer ();
					break;
				case 7:
					this.king = base.deserialize.read_integer ();
					break;
				case 8:
					this.small_king = base.deserialize.read_integer ();
					break;
				case 9:
					this.family = base.deserialize.read_string ();
					break;
				case 10:
					this.win_combo = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.openid, 1);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.avatar_url, 3);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.nickname, 4);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.like_num, 6);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.king, 7);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.small_king, 8);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.family, 9);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.win_combo, 10);
			}

			return base.serialize.close ();
		}
	}


	public class kick_user {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _reason; // tag 0
			public Int64 reason {
				get { return _reason; }
				set { base.has_field.set_field (0, true); _reason = value; }
			}
			public bool HasReason {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.reason = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.reason, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class open_info : SprotoTypeBase {
		private static int max_field_count = 9;
		
		
		private string _openid; // tag 0
		public string openid {
			get { return _openid; }
			set { base.has_field.set_field (0, true); _openid = value; }
		}
		public bool HasOpenid {
			get { return base.has_field.has_field (0); }
		}

		private string _nickname; // tag 1
		public string nickname {
			get { return _nickname; }
			set { base.has_field.set_field (1, true); _nickname = value; }
		}
		public bool HasNickname {
			get { return base.has_field.has_field (1); }
		}

		private string _avatar_url; // tag 2
		public string avatar_url {
			get { return _avatar_url; }
			set { base.has_field.set_field (2, true); _avatar_url = value; }
		}
		public bool HasAvatar_url {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _win_count; // tag 3
		public Int64 win_count {
			get { return _win_count; }
			set { base.has_field.set_field (3, true); _win_count = value; }
		}
		public bool HasWin_count {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _win_combo; // tag 4
		public Int64 win_combo {
			get { return _win_combo; }
			set { base.has_field.set_field (4, true); _win_combo = value; }
		}
		public bool HasWin_combo {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _room_win_cnt; // tag 5
		public Int64 room_win_cnt {
			get { return _room_win_cnt; }
			set { base.has_field.set_field (5, true); _room_win_cnt = value; }
		}
		public bool HasRoom_win_cnt {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _rank_begin; // tag 6
		public Int64 rank_begin {
			get { return _rank_begin; }
			set { base.has_field.set_field (6, true); _rank_begin = value; }
		}
		public bool HasRank_begin {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _rank_end; // tag 7
		public Int64 rank_end {
			get { return _rank_end; }
			set { base.has_field.set_field (7, true); _rank_end = value; }
		}
		public bool HasRank_end {
			get { return base.has_field.has_field (7); }
		}

		private string _world_score; // tag 8
		public string world_score {
			get { return _world_score; }
			set { base.has_field.set_field (8, true); _world_score = value; }
		}
		public bool HasWorld_score {
			get { return base.has_field.has_field (8); }
		}

		public open_info () : base(max_field_count) {}

		public open_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.openid = base.deserialize.read_string ();
					break;
				case 1:
					this.nickname = base.deserialize.read_string ();
					break;
				case 2:
					this.avatar_url = base.deserialize.read_string ();
					break;
				case 3:
					this.win_count = base.deserialize.read_integer ();
					break;
				case 4:
					this.win_combo = base.deserialize.read_integer ();
					break;
				case 5:
					this.room_win_cnt = base.deserialize.read_integer ();
					break;
				case 6:
					this.rank_begin = base.deserialize.read_integer ();
					break;
				case 7:
					this.rank_end = base.deserialize.read_integer ();
					break;
				case 8:
					this.world_score = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.openid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.nickname, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.avatar_url, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.win_count, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.win_combo, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.room_win_cnt, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.rank_begin, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.rank_end, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_string (this.world_score, 8);
			}

			return base.serialize.close ();
		}
	}


	public class rank_info : SprotoTypeBase {
		private static int max_field_count = 5;
		
		
		private string _openid; // tag 0
		public string openid {
			get { return _openid; }
			set { base.has_field.set_field (0, true); _openid = value; }
		}
		public bool HasOpenid {
			get { return base.has_field.has_field (0); }
		}

		private string _score; // tag 1
		public string score {
			get { return _score; }
			set { base.has_field.set_field (1, true); _score = value; }
		}
		public bool HasScore {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _rank; // tag 2
		public Int64 rank {
			get { return _rank; }
			set { base.has_field.set_field (2, true); _rank = value; }
		}
		public bool HasRank {
			get { return base.has_field.has_field (2); }
		}

		private open_info _open_info; // tag 3
		public open_info open_info {
			get { return _open_info; }
			set { base.has_field.set_field (3, true); _open_info = value; }
		}
		public bool HasOpen_info {
			get { return base.has_field.has_field (3); }
		}

		private string _family; // tag 4
		public string family {
			get { return _family; }
			set { base.has_field.set_field (4, true); _family = value; }
		}
		public bool HasFamily {
			get { return base.has_field.has_field (4); }
		}

		public rank_info () : base(max_field_count) {}

		public rank_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.openid = base.deserialize.read_string ();
					break;
				case 1:
					this.score = base.deserialize.read_string ();
					break;
				case 2:
					this.rank = base.deserialize.read_integer ();
					break;
				case 3:
					this.open_info = base.deserialize.read_obj<open_info> ();
					break;
				case 4:
					this.family = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.openid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.score, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.rank, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_obj (this.open_info, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.family, 4);
			}

			return base.serialize.close ();
		}
	}


	public class s2c_test {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


	}


	public class send_douyin_choose_side {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<douyin_choose_side> _list; // tag 0
			public List<douyin_choose_side> list {
				get { return _list; }
				set { base.has_field.set_field (0, true); _list = value; }
			}
			public bool HasList {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.list = base.deserialize.read_obj_list<douyin_choose_side> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.list, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_douyin_comment {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<douyin_comment> _list; // tag 0
			public List<douyin_comment> list {
				get { return _list; }
				set { base.has_field.set_field (0, true); _list = value; }
			}
			public bool HasList {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.list = base.deserialize.read_obj_list<douyin_comment> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.list, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_douyin_family_spec {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private string _content; // tag 0
			public string content {
				get { return _content; }
				set { base.has_field.set_field (0, true); _content = value; }
			}
			public bool HasContent {
				get { return base.has_field.has_field (0); }
			}

			private string _openid; // tag 1
			public string openid {
				get { return _openid; }
				set { base.has_field.set_field (1, true); _openid = value; }
			}
			public bool HasOpenid {
				get { return base.has_field.has_field (1); }
			}

			private string _family; // tag 2
			public string family {
				get { return _family; }
				set { base.has_field.set_field (2, true); _family = value; }
			}
			public bool HasFamily {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.content = base.deserialize.read_string ();
						break;
					case 1:
						this.openid = base.deserialize.read_string ();
						break;
					case 2:
						this.family = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.content, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.openid, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.family, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_douyin_gift {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<douyin_gift> _list; // tag 0
			public List<douyin_gift> list {
				get { return _list; }
				set { base.has_field.set_field (0, true); _list = value; }
			}
			public bool HasList {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.list = base.deserialize.read_obj_list<douyin_gift> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.list, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_douyin_king_spec {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _content; // tag 0
			public string content {
				get { return _content; }
				set { base.has_field.set_field (0, true); _content = value; }
			}
			public bool HasContent {
				get { return base.has_field.has_field (0); }
			}

			private string _openid; // tag 1
			public string openid {
				get { return _openid; }
				set { base.has_field.set_field (1, true); _openid = value; }
			}
			public bool HasOpenid {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.content = base.deserialize.read_string ();
						break;
					case 1:
						this.openid = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.content, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.openid, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_douyin_like {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<douyin_like> _list; // tag 0
			public List<douyin_like> list {
				get { return _list; }
				set { base.has_field.set_field (0, true); _list = value; }
			}
			public bool HasList {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.list = base.deserialize.read_obj_list<douyin_like> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.list, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_douyin_win_combo_content {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private string _content; // tag 0
			public string content {
				get { return _content; }
				set { base.has_field.set_field (0, true); _content = value; }
			}
			public bool HasContent {
				get { return base.has_field.has_field (0); }
			}

			private string _openid; // tag 1
			public string openid {
				get { return _openid; }
				set { base.has_field.set_field (1, true); _openid = value; }
			}
			public bool HasOpenid {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _win_combo; // tag 2
			public Int64 win_combo {
				get { return _win_combo; }
				set { base.has_field.set_field (2, true); _win_combo = value; }
			}
			public bool HasWin_combo {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.content = base.deserialize.read_string ();
						break;
					case 1:
						this.openid = base.deserialize.read_string ();
						break;
					case 2:
						this.win_combo = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.content, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.openid, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.win_combo, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_rank_data {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _rank_type; // tag 0
			public Int64 rank_type {
				get { return _rank_type; }
				set { base.has_field.set_field (0, true); _rank_type = value; }
			}
			public bool HasRank_type {
				get { return base.has_field.has_field (0); }
			}

			private List<rank_info> _rank_data; // tag 1
			public List<rank_info> rank_data {
				get { return _rank_data; }
				set { base.has_field.set_field (1, true); _rank_data = value; }
			}
			public bool HasRank_data {
				get { return base.has_field.has_field (1); }
			}

			private string _id; // tag 2
			public string id {
				get { return _id; }
				set { base.has_field.set_field (2, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.rank_type = base.deserialize.read_integer ();
						break;
					case 1:
						this.rank_data = base.deserialize.read_obj_list<rank_info> ();
						break;
					case 2:
						this.id = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.rank_type, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.rank_data, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.id, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_rank_data_end {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _rank_type; // tag 0
			public Int64 rank_type {
				get { return _rank_type; }
				set { base.has_field.set_field (0, true); _rank_type = value; }
			}
			public bool HasRank_type {
				get { return base.has_field.has_field (0); }
			}

			private string _id; // tag 1
			public string id {
				get { return _id; }
				set { base.has_field.set_field (1, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.rank_type = base.deserialize.read_integer ();
						break;
					case 1:
						this.id = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.rank_type, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.id, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_rank_data_start {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _rank_type; // tag 0
			public Int64 rank_type {
				get { return _rank_type; }
				set { base.has_field.set_field (0, true); _rank_type = value; }
			}
			public bool HasRank_type {
				get { return base.has_field.has_field (0); }
			}

			private string _id; // tag 1
			public string id {
				get { return _id; }
				set { base.has_field.set_field (1, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.rank_type = base.deserialize.read_integer ();
						break;
					case 1:
						this.id = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.rank_type, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.id, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_room_info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _room_id; // tag 0
			public string room_id {
				get { return _room_id; }
				set { base.has_field.set_field (0, true); _room_id = value; }
			}
			public bool HasRoom_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.room_id = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.room_id, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_spec_openinfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _rank_type; // tag 0
			public Int64 rank_type {
				get { return _rank_type; }
				set { base.has_field.set_field (0, true); _rank_type = value; }
			}
			public bool HasRank_type {
				get { return base.has_field.has_field (0); }
			}

			private List<rank_info> _infos; // tag 1
			public List<rank_info> infos {
				get { return _infos; }
				set { base.has_field.set_field (1, true); _infos = value; }
			}
			public bool HasInfos {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.rank_type = base.deserialize.read_integer ();
						break;
					case 1:
						this.infos = base.deserialize.read_obj_list<rank_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.rank_type, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.infos, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_spec_openinfo_end {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _rank_type; // tag 0
			public Int64 rank_type {
				get { return _rank_type; }
				set { base.has_field.set_field (0, true); _rank_type = value; }
			}
			public bool HasRank_type {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.rank_type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.rank_type, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class send_spec_openinfo_start {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _rank_type; // tag 0
			public Int64 rank_type {
				get { return _rank_type; }
				set { base.has_field.set_field (0, true); _rank_type = value; }
			}
			public bool HasRank_type {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.rank_type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.rank_type, 0);
				}

				return base.serialize.close ();
			}
		}


	}


}


public class S2CProtocol : ProtocolBase {
	public static  S2CProtocol Instance = new S2CProtocol();
	private S2CProtocol() {
		Protocol.SetProtocol<heartbeat> (heartbeat.Tag);

		Protocol.SetProtocol<kick_user> (kick_user.Tag);
		Protocol.SetRequest<SprotoType.kick_user.request> (kick_user.Tag);

		Protocol.SetProtocol<s2c_test> (s2c_test.Tag);
		Protocol.SetRequest<SprotoType.s2c_test.request> (s2c_test.Tag);

		Protocol.SetProtocol<send_douyin_choose_side> (send_douyin_choose_side.Tag);
		Protocol.SetRequest<SprotoType.send_douyin_choose_side.request> (send_douyin_choose_side.Tag);

		Protocol.SetProtocol<send_douyin_comment> (send_douyin_comment.Tag);
		Protocol.SetRequest<SprotoType.send_douyin_comment.request> (send_douyin_comment.Tag);

		Protocol.SetProtocol<send_douyin_family_spec> (send_douyin_family_spec.Tag);
		Protocol.SetRequest<SprotoType.send_douyin_family_spec.request> (send_douyin_family_spec.Tag);

		Protocol.SetProtocol<send_douyin_gift> (send_douyin_gift.Tag);
		Protocol.SetRequest<SprotoType.send_douyin_gift.request> (send_douyin_gift.Tag);

		Protocol.SetProtocol<send_douyin_king_spec> (send_douyin_king_spec.Tag);
		Protocol.SetRequest<SprotoType.send_douyin_king_spec.request> (send_douyin_king_spec.Tag);

		Protocol.SetProtocol<send_douyin_like> (send_douyin_like.Tag);
		Protocol.SetRequest<SprotoType.send_douyin_like.request> (send_douyin_like.Tag);

		Protocol.SetProtocol<send_douyin_win_combo_content> (send_douyin_win_combo_content.Tag);
		Protocol.SetRequest<SprotoType.send_douyin_win_combo_content.request> (send_douyin_win_combo_content.Tag);

		Protocol.SetProtocol<send_rank_data> (send_rank_data.Tag);
		Protocol.SetRequest<SprotoType.send_rank_data.request> (send_rank_data.Tag);

		Protocol.SetProtocol<send_rank_data_end> (send_rank_data_end.Tag);
		Protocol.SetRequest<SprotoType.send_rank_data_end.request> (send_rank_data_end.Tag);

		Protocol.SetProtocol<send_rank_data_start> (send_rank_data_start.Tag);
		Protocol.SetRequest<SprotoType.send_rank_data_start.request> (send_rank_data_start.Tag);

		Protocol.SetProtocol<send_room_info> (send_room_info.Tag);
		Protocol.SetRequest<SprotoType.send_room_info.request> (send_room_info.Tag);

		Protocol.SetProtocol<send_spec_openinfo> (send_spec_openinfo.Tag);
		Protocol.SetRequest<SprotoType.send_spec_openinfo.request> (send_spec_openinfo.Tag);

		Protocol.SetProtocol<send_spec_openinfo_end> (send_spec_openinfo_end.Tag);
		Protocol.SetRequest<SprotoType.send_spec_openinfo_end.request> (send_spec_openinfo_end.Tag);

		Protocol.SetProtocol<send_spec_openinfo_start> (send_spec_openinfo_start.Tag);
		Protocol.SetRequest<SprotoType.send_spec_openinfo_start.request> (send_spec_openinfo_start.Tag);

	}

	public class heartbeat {
		public const int Tag = 1;
	}

	public class kick_user {
		public const int Tag = 8;
	}

	public class s2c_test {
		public const int Tag = 2;
	}

	public class send_douyin_choose_side {
		public const int Tag = 12;
	}

	public class send_douyin_comment {
		public const int Tag = 6;
	}

	public class send_douyin_family_spec {
		public const int Tag = 16;
	}

	public class send_douyin_gift {
		public const int Tag = 7;
	}

	public class send_douyin_king_spec {
		public const int Tag = 9;
	}

	public class send_douyin_like {
		public const int Tag = 11;
	}

	public class send_douyin_win_combo_content {
		public const int Tag = 17;
	}

	public class send_rank_data {
		public const int Tag = 4;
	}

	public class send_rank_data_end {
		public const int Tag = 5;
	}

	public class send_rank_data_start {
		public const int Tag = 3;
	}

	public class send_room_info {
		public const int Tag = 10;
	}

	public class send_spec_openinfo {
		public const int Tag = 14;
	}

	public class send_spec_openinfo_end {
		public const int Tag = 15;
	}

	public class send_spec_openinfo_start {
		public const int Tag = 13;
	}

}