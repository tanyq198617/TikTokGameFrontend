// Generated by sprotodump. DO NOT EDIT!
// source: E:\WorkSpace\qiuqiu_client\Assets\Scripts\NetWork\ProtoTools\protocol\/c2s.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace SprotoType { 
	public class _res_win_combo : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private string _openid; // tag 0
		public string openid {
			get { return _openid; }
			set { base.has_field.set_field (0, true); _openid = value; }
		}
		public bool HasOpenid {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _win_combo; // tag 1
		public Int64 win_combo {
			get { return _win_combo; }
			set { base.has_field.set_field (1, true); _win_combo = value; }
		}
		public bool HasWin_combo {
			get { return base.has_field.has_field (1); }
		}

		public _res_win_combo () : base(max_field_count) {}

		public _res_win_combo (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.openid = base.deserialize.read_string ();
					break;
				case 1:
					this.win_combo = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.openid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.win_combo, 1);
			}

			return base.serialize.close ();
		}
	}


	public class game_result {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _result; // tag 0
			public Int64 result {
				get { return _result; }
				set { base.has_field.set_field (0, true); _result = value; }
			}
			public bool HasResult {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.result = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.result, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _world_rank_t; // tag 1
			public Int64 world_rank_t {
				get { return _world_rank_t; }
				set { base.has_field.set_field (1, true); _world_rank_t = value; }
			}
			public bool HasWorld_rank_t {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _family_rank_t; // tag 2
			public Int64 family_rank_t {
				get { return _family_rank_t; }
				set { base.has_field.set_field (2, true); _family_rank_t = value; }
			}
			public bool HasFamily_rank_t {
				get { return base.has_field.has_field (2); }
			}

			private List<_res_win_combo> _win_comboes; // tag 3
			public List<_res_win_combo> win_comboes {
				get { return _win_comboes; }
				set { base.has_field.set_field (3, true); _win_comboes = value; }
			}
			public bool HasWin_comboes {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.world_rank_t = base.deserialize.read_integer ();
						break;
					case 2:
						this.family_rank_t = base.deserialize.read_integer ();
						break;
					case 3:
						this.win_comboes = base.deserialize.read_obj_list<_res_win_combo> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.world_rank_t, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.family_rank_t, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.win_comboes, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_start {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class get {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _what; // tag 0
			public string what {
				get { return _what; }
				set { base.has_field.set_field (0, true); _what = value; }
			}
			public bool HasWhat {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.what = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.what, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _result; // tag 0
			public string result {
				get { return _result; }
				set { base.has_field.set_field (0, true); _result = value; }
			}
			public bool HasResult {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.result = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.result, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class gm {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _cmd; // tag 0
			public string cmd {
				get { return _cmd; }
				set { base.has_field.set_field (0, true); _cmd = value; }
			}
			public bool HasCmd {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.cmd = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.cmd, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			private string _help; // tag 2
			public string help {
				get { return _help; }
				set { base.has_field.set_field (2, true); _help = value; }
			}
			public bool HasHelp {
				get { return base.has_field.has_field (2); }
			}

			private string _result; // tag 3
			public string result {
				get { return _result; }
				set { base.has_field.set_field (3, true); _result = value; }
			}
			public bool HasResult {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					case 2:
						this.help = base.deserialize.read_string ();
						break;
					case 3:
						this.result = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.help, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.result, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class handshake {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


	}


	public class heartbeat {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


	}


	public class kill_record {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<Record> _msg_list; // tag 0
			public List<Record> msg_list {
				get { return _msg_list; }
				set { base.has_field.set_field (0, true); _msg_list = value; }
			}
			public bool HasMsg_list {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.msg_list = base.deserialize.read_obj_list<Record> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.msg_list, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class login {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 7;
			
			
			private string _account_type; // tag 1
			public string account_type {
				get { return _account_type; }
				set { base.has_field.set_field (0, true); _account_type = value; }
			}
			public bool HasAccount_type {
				get { return base.has_field.has_field (0); }
			}

			private string _openid; // tag 2
			public string openid {
				get { return _openid; }
				set { base.has_field.set_field (1, true); _openid = value; }
			}
			public bool HasOpenid {
				get { return base.has_field.has_field (1); }
			}

			private string _token; // tag 3
			public string token {
				get { return _token; }
				set { base.has_field.set_field (2, true); _token = value; }
			}
			public bool HasToken {
				get { return base.has_field.has_field (2); }
			}

			private string _device_info; // tag 4
			public string device_info {
				get { return _device_info; }
				set { base.has_field.set_field (3, true); _device_info = value; }
			}
			public bool HasDevice_info {
				get { return base.has_field.has_field (3); }
			}

			private string _appver; // tag 5
			public string appver {
				get { return _appver; }
				set { base.has_field.set_field (4, true); _appver = value; }
			}
			public bool HasAppver {
				get { return base.has_field.has_field (4); }
			}

			private string _extra; // tag 6
			public string extra {
				get { return _extra; }
				set { base.has_field.set_field (5, true); _extra = value; }
			}
			public bool HasExtra {
				get { return base.has_field.has_field (5); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 1:
						this.account_type = base.deserialize.read_string ();
						break;
					case 2:
						this.openid = base.deserialize.read_string ();
						break;
					case 3:
						this.token = base.deserialize.read_string ();
						break;
					case 4:
						this.device_info = base.deserialize.read_string ();
						break;
					case 5:
						this.appver = base.deserialize.read_string ();
						break;
					case 6:
						this.extra = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.account_type, 1);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.openid, 2);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.token, 3);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.device_info, 4);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_string (this.appver, 5);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_string (this.extra, 6);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 6;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			private string _user_info; // tag 2
			public string user_info {
				get { return _user_info; }
				set { base.has_field.set_field (2, true); _user_info = value; }
			}
			public bool HasUser_info {
				get { return base.has_field.has_field (2); }
			}

			private string _openid; // tag 3
			public string openid {
				get { return _openid; }
				set { base.has_field.set_field (3, true); _openid = value; }
			}
			public bool HasOpenid {
				get { return base.has_field.has_field (3); }
			}

			private string _token; // tag 4
			public string token {
				get { return _token; }
				set { base.has_field.set_field (4, true); _token = value; }
			}
			public bool HasToken {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _app_update_info; // tag 5
			public Int64 app_update_info {
				get { return _app_update_info; }
				set { base.has_field.set_field (5, true); _app_update_info = value; }
			}
			public bool HasApp_update_info {
				get { return base.has_field.has_field (5); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					case 2:
						this.user_info = base.deserialize.read_string ();
						break;
					case 3:
						this.openid = base.deserialize.read_string ();
						break;
					case 4:
						this.token = base.deserialize.read_string ();
						break;
					case 5:
						this.app_update_info = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.user_info, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.openid, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_string (this.token, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.app_update_info, 5);
				}

				return base.serialize.close ();
			}
		}


	}


	public class Record : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private string _openid; // tag 0
		public string openid {
			get { return _openid; }
			set { base.has_field.set_field (0, true); _openid = value; }
		}
		public bool HasOpenid {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _count; // tag 1
		public Int64 count {
			get { return _count; }
			set { base.has_field.set_field (1, true); _count = value; }
		}
		public bool HasCount {
			get { return base.has_field.has_field (1); }
		}

		public Record () : base(max_field_count) {}

		public Record (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.openid = base.deserialize.read_string ();
					break;
				case 1:
					this.count = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.openid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.count, 1);
			}

			return base.serialize.close ();
		}
	}


	public class req_rank_info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _rank_type; // tag 0
			public Int64 rank_type {
				get { return _rank_type; }
				set { base.has_field.set_field (0, true); _rank_type = value; }
			}
			public bool HasRank_type {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.rank_type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.rank_type, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _rank_type; // tag 1
			public Int64 rank_type {
				get { return _rank_type; }
				set { base.has_field.set_field (1, true); _rank_type = value; }
			}
			public bool HasRank_type {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.rank_type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.rank_type, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class start_room {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _room_id; // tag 0
			public string room_id {
				get { return _room_id; }
				set { base.has_field.set_field (0, true); _room_id = value; }
			}
			public bool HasRoom_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.room_id = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.room_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				return base.serialize.close ();
			}
		}


	}


}


public class C2SProtocol : ProtocolBase {
	public static  C2SProtocol Instance = new C2SProtocol();
	private C2SProtocol() {
		Protocol.SetProtocol<game_result> (game_result.Tag);
		Protocol.SetRequest<SprotoType.game_result.request> (game_result.Tag);
		Protocol.SetResponse<SprotoType.game_result.response> (game_result.Tag);

		Protocol.SetProtocol<game_start> (game_start.Tag);
		Protocol.SetRequest<SprotoType.game_start.request> (game_start.Tag);
		Protocol.SetResponse<SprotoType.game_start.response> (game_start.Tag);

		Protocol.SetProtocol<get> (get.Tag);
		Protocol.SetRequest<SprotoType.get.request> (get.Tag);
		Protocol.SetResponse<SprotoType.get.response> (get.Tag);

		Protocol.SetProtocol<gm> (gm.Tag);
		Protocol.SetRequest<SprotoType.gm.request> (gm.Tag);
		Protocol.SetResponse<SprotoType.gm.response> (gm.Tag);

		Protocol.SetProtocol<handshake> (handshake.Tag);
		Protocol.SetRequest<SprotoType.handshake.request> (handshake.Tag);

		Protocol.SetProtocol<heartbeat> (heartbeat.Tag);
		Protocol.SetRequest<SprotoType.heartbeat.request> (heartbeat.Tag);
		Protocol.SetResponse<SprotoType.heartbeat.response> (heartbeat.Tag);

		Protocol.SetProtocol<kill_record> (kill_record.Tag);
		Protocol.SetRequest<SprotoType.kill_record.request> (kill_record.Tag);
		Protocol.SetResponse<SprotoType.kill_record.response> (kill_record.Tag);

		Protocol.SetProtocol<login> (login.Tag);
		Protocol.SetRequest<SprotoType.login.request> (login.Tag);
		Protocol.SetResponse<SprotoType.login.response> (login.Tag);

		Protocol.SetProtocol<req_rank_info> (req_rank_info.Tag);
		Protocol.SetRequest<SprotoType.req_rank_info.request> (req_rank_info.Tag);
		Protocol.SetResponse<SprotoType.req_rank_info.response> (req_rank_info.Tag);

		Protocol.SetProtocol<start_room> (start_room.Tag);
		Protocol.SetRequest<SprotoType.start_room.request> (start_room.Tag);
		Protocol.SetResponse<SprotoType.start_room.response> (start_room.Tag);

	}

	public class game_result {
		public const int Tag = 104;
	}

	public class game_start {
		public const int Tag = 105;
	}

	public class get {
		public const int Tag = 2;
	}

	public class gm {
		public const int Tag = 106;
	}

	public class handshake {
		public const int Tag = 1;
	}

	public class heartbeat {
		public const int Tag = 3;
	}

	public class kill_record {
		public const int Tag = 103;
	}

	public class login {
		public const int Tag = 100;
	}

	public class req_rank_info {
		public const int Tag = 101;
	}

	public class start_room {
		public const int Tag = 102;
	}

}